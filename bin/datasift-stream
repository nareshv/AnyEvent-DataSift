#!/usr/bin/env perl

use strict;
use warnings;
use 5.010;

use YAML;
use AnyEvent;
use AnyEvent::DataSift::HTTP::Stream;
use Getopt::Long;

GetOptions(
	'q|quiet'              => \my $quiet,
	'u|user|username=s'    => \my $username,
	'a|k|key|api|apikey=s' => \my $apikey,
	's|stream=s'           => \my $stream,
);

unless( $username && $apikey && $stream ) {
	print <<EOHELP

$0 [options] -u=username -a=apikey -s=streamhash

options:
  -quiet : just output receveid data without state
           notification and tick cursor

eg:
  $0 -u=batman -a=1652e1a6ab627893d5151ab3a895db31 -s=141667cb8dbe45ba45ac965b928f26d5

EOHELP
	;
	exit 1;
}

$|++;

my $w = AnyEvent->condvar;

AnyEvent->signal(
	signal => 'INT',
	cb     => sub { $w->send( 'sigint' ) },
);

AnyEvent->signal(
	signal => 'TERM',
	cb     => sub { $w->send( 'sigterm' ) },
);

AnyEvent::DataSift::HTTP::Stream->new(
	username      => $username,
	apikey        => $apikey,
	stream        => $stream,
	on_connect    => $quiet ? sub{} : sub{ say 'connected' },
	on_disconnect => sub{ 
		say 'disconnected' unless $quiet;
		$w->send('disconnected');
	},
	on_data       => sub{ say Dump $_[0] },
	on_error      => sub{ warn "ERROR $_[0]\n"},
	on_tick       => $quiet ? {} : sub{ 
		state $chars = ["/","-","\\","|"];
		state $count = 0;
		print $chars->[++$count % 4],"\r";
	}
);

my $msg = $w->recv;
say "\n",$msg;

0;